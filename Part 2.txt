

2-2

상수: 상수는 원주율처럼 값이 정해져있고 변하면 안되는 경우
정수 상수 표현법
정수 상수 == 0~9, +,-로 표현
10진수, 8진수, 16진수로 정수를 표현함

2진수는 너무 비효율적이라서 사용하지 않음

0x,c    %x
0,14    %o
,12     %d

실수 상수 표현법
0~9, +,- 소수점으로 표현

-10., .5 
and 지수형태로 표현도 함

3.14 x 10 -5승
== 3.14e-5
== 0.0314e-3 도 같은것 하지만 소수점 앞에 0이 아닌 유효 숫자 한자리를 사용하는 것을 정규화 표기법이라고 함

#include <stdio.h>

int main(void) {
    printf("%.1lf \n", 1e6);
    printf("%.7lf\n", 3.14e-5);
    printf("$le\n", 0.0000314);
    printf("%.2le\n", 0.0000314);  #le 지수(정규화 표기법에서 자리수를 변경한 결과)

    return 0;
}

문자와 문자열 상수 표현법
'', "" 로 묶으면 각각 문자, 문자열로 나뉨
%c, %s

상수가 컴파일 된후의 비트의 상태
편집기에 정수, 실수, 문자 상수를 입력하게 되면 각각을 해당하는 아스키코드로 변환하여 저장하게됨
10 + 20; == 1, 0, +, 2, 0으로 나뉘어서 저장하게 된다.
컴파일하기 전까지는 무엇도 아니고 그냥 저장되어있는거임

컴파일되면 다음과 같아진다.
상수 종류 \ 크기 \ 바뀌는 형태*표현
정수    4byte   2진수
실수    8       IEEE 754표준 double형
문자    4       아스키코드값과 같은 2진수

정수상수와 실수상수의 컴파일
정수는 4바이트, 실수는 8바이트 각각의 차이를 알아보자 
10:   00000000 00000000 00000000 00001010
10.0: 01000000 00100100 00000000 00000000 00000000 00000000 00000000 00000000 //저장되는 용량이 매우매우 다름
--> 어떤형태의 상수를 사용하느냐에 따라 정확도와 속도가 달라짐

문자 상수의 컴파일
아스키 코드에 대응하는 정수상수의 형태로 표현이됨

정수상수가 컴파일된후의 비트 형태

1바이트의 정수로 표현가능한 최댓값과 최솟값은 0~127(255)
(8bit)

따라서 정수상수 4바이트는 0~2의 32승 -1 만큼 표현가능
이보다 더큰 수를 표현하고 싶으면 ll (long long) 형태를 사용하여 8바이트로 사용가능

음수의 표현 ; 2의보수로 표현
10
00000000 00000000 00000000 00001010
-10
00000000 00000000 00000000 00001010
11111111 11111111 11111111 11110101 (1의보수) - 반전시킴
11111111 11111111 11111111 11110110 (1의보수 + 1) == -10

실수상수가 컴파일된 후의 비트 형태
https://m.blog.naver.com/doksg/221806828790
1bit의 부호비트 | 지수부 11비트 | 소수부 52비트

-6.5
1 10000000001.1010000000000000000000000000000000000000000000000000
              -1 -2 -3 -4 ... 각각의 비트가 2의 음수 승만큼을 표현함
              
부호/정수/실수로 나누어서 2진수로 표현
-, 6, .5
0000 0110, .1 x 2의 0승
110.1x2(0)
정규표현에 따르면 정수부분은 1로 두기로함
1.101x2(2) 과같음

지수부의 표현은 011 1111 1111가 0임
따라서 여기에 2에 해당하는 10을 더하면 100 0000 0001이됨 --> 지수부
소수부 나머지 .1010000000... 52자리로 표현됨
음수까지 1로 결과가 위와 같이 나옴

소수부 비트가 커질수록 정확도가 올라감;
소수부분의 길이가 길어질수록 같은 자릿수에 대해서 표현할 수 있는 경우의 수가 한정되어있기 때문임
만약 4비트라면
1/2, 1/4, 1/8, 1/16 의 합으로 표현된 조합으로
0.0625, 0.125, 0.1875 ... 0.875, 0.9375만 표현이 가능하고
0.06266이런건 표현 못한다는 뜻
