아스키 코드 값과 문자 입출력 함수

'a'는 문자 상수로 해석합니다.
컴파일 후에는 정수값인 아스키 코드로 바뀜
-> 변수같은게 아님. 그냥 상수고 'a' == 97이라고 생각하면 됨.

'a'의 정수 표현방식이 97 , 97의 문자 표현이 'a'인거임


scanf("%c")로 문자입력을 받을 수 있음.
이 때 공백, 탭, 개행문자에 유의해야함
이러한 문자를 화이트 스페이스라고 함.
%d, %lf, %s와 같은 변환문자로 숫자나 문자열을 입력하는 데이터는 구분하는 용도가 됨
하지만 문자로는 그자체가 입력이 됨.
%c 앞에 화이트 스페이스를 사용하면 문자도 분리해 입력할 수 있다.
이렇게 입력을 하면 화이트 스페이스는 무시하고 그 외의 문자만 입력함.

int형 변수에 문자만 입력할 수는 있지만, 나머지 3바이트가 쓰레기 값이 남기 때문에 사용하기 힘들어짐

getchar, putchar함수.
scanf함수는 숫자도 입력하기 때문에 문자만 입력하는 수에 비해 크기가 큼
따라서 getchar, putchar로 문자 전용입출력함수를 만들어 사용

getchar의 반환값은 int형 변수임
-> 반환시 아스키코드값을 반환하지만, EOF시 -1을 반환하는데 이를 정확히 구분하기 위해서 int형을 사용함.


버퍼를 사용하는 입력함수
scanf함수가 문자를 입력하는 과정

입력 데이터는 enter를 누르는 순간 버퍼에 저장됨
버퍼에는 1파이트씩 비트(정수)로 들어감
abcd\n

%c가 입력보다 적을때는 %c입력의 개수만큼 입력버퍼에서 빼내고, 
나머지는 입력버퍼에 둠

이때 입력 버퍼의 마지막이 \n 인 것을 이용해 끝을 찾아 입력을 종료시킬수 있다.

아니면 scanf함수 반환값을 이용해 끝낼 수 있음
scanf의 eof를 입력하면 return값으로 -1이 되므로 -1을 반환하기전에 개행문자를 포함하여 모든 문자를 출력시킬 수 있음

